<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <!-- DO NOT CHANGE THIS "groupId" WITHOUT CHANGING XMLSession.getManifestAttributes.MANIFEST_VENDOR_ID_ATTRIB -->
        <groupId>net.sf.openas2</groupId>
        <artifactId>OpenAS2</artifactId>
        <version>4.5.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>openas2-server</artifactId>

    <!-- DO NOT CHANGE THIS "name" WITHOUT CHANGING XMLSession.getManifestAttributes.MANIFEST_TITLE_ATTRIB -->
    <name>OpenAS2 Server</name>
    <description>
        Open source implementation of the AS2 standard for signed encrypted and compressed document transfer
    </description>

    <properties>
        <mainClass>org.openas2.app.OpenAS2Server</mainClass>
        <project.dist.package.name>${project.parent.artifactId}Server-${project.version}.zip</project.dist.package.name>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <help.file.src>${project.basedir}/../docs/OpenAS2HowTo.pdf</help.file.src>
        <project.license>${project.basedir}/../LICENSE.txt</project.license>
        <release.notes>${project.basedir}/../RELEASE-NOTES.md</release.notes>
        <release.history>${project.basedir}/../changes.txt</release.history>
        <package.assembly.dir>${project.build.directory}/dist</package.assembly.dir>
    </properties>

    <distributionManagement>
        <site>
            <id>openas2.sf.net</id>
            <name>openas2.sf.net</name>
            <url>sftp://web.sourceforge.net/home/project-web/openas2/htdocs/test</url>
        </site>
    </distributionManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemProperties>
                        <OPENAS2_LOG_BASE>logs</OPENAS2_LOG_BASE>
                    </systemProperties>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-cli</id>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <target>
                               <copy todir="${package.assembly.dir}/bin"
                                      verbose="true">
                                    <fileset dir="${project.basedir}/src/bin"/>
                                </copy>
                                <echo message="OS Name: ${os.name}"/>
								<exec executable="sh" osfamily="unix">
								    <arg value="-c"/>
								    <arg line="'chmod uga+x ${package.assembly.dir}/bin/*.sh'"/>
								</exec>
								<!--Copy config directory to assembly directory -->
                                <copy todir="${package.assembly.dir}/config"
                                      verbose="true">
                                    <fileset dir="${project.basedir}/src/config"/>
                                </copy>
                                <!--Copy resources directory to assembly directory -->
                                <copy todir="${package.assembly.dir}/resources"
                                      verbose="true">
                                    <fileset dir="${project.basedir}/src/resources"/>
                                </copy>
                                <!--Copy artifact to build lib directory -->
                                <copy
                                    file="${project.build.directory}/${project.build.finalName}.jar"
                                    todir="${package.assembly.dir}/lib" verbose="true"/>
                                <!-- Add the help PDF version to the distro -->
                                <copy file="${help.file.src}"
                                      todir="${package.assembly.dir}" verbose="true"/>
                                <!-- Add the release notes files -->
                                <copy file="${release.notes}"
                                      todir="${package.assembly.dir}" verbose="true"/>
                                <copy file="${release.history}"
                                      todir="${package.assembly.dir}" verbose="true"/>
                                <copy file="${project.license}"
                                      todir="${package.assembly.dir}" verbose="true"/>
                                <!-- create distribution package
                                    basedir="${package.assembly.dir}"
                                -->
                                <!--
                                    Pre-delete the package otherwise it keeps old files in it
                                -->
 							    <delete file="${project.basedir}/dist/${project.dist.package.name}"/>
                                <zip
                                    destfile="${project.basedir}/dist/${project.dist.package.name}"
                                    update="true">
                                        <zipfileset dir="${package.assembly.dir}" encoding="UTF-8"
                                                 includes="**/*.sh" filemode="755"/>
                                        <zipfileset dir="${package.assembly.dir}" encoding="UTF-8"
                                                 excludes="**/*.sh"/>

                                </zip>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <archive>
                                <!-- Configures the content of the created manifest -->
                                <manifest>
                                    <!-- Adds the classpath to the created manifest -->
                                    <addClasspath>true</addClasspath>
                                    <!-- Specifies that all dependencies of our application are found -->
                                    <!-- Configures the main class of the application -->
                                    <mainClass>org.openas2.app.OpenAS2Server</mainClass>
                                </manifest>
                            </archive>
                        </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <inputDirectory>${project.basedir}/../docs</inputDirectory>
                    <chmod>false</chmod>
                    <generateReports>false</generateReports>
                    <generatedSiteDirectory>false</generatedSiteDirectory>
                    <generateSitemap>false</generateSitemap>
                    <generateProjectInfo>false</generateProjectInfo>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>org.dom4j</groupId>
            <artifactId>dom4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcjmail-jdk18on</artifactId>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk18on</artifactId>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk18on</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
        </dependency>
		<dependency>
		    <groupId>org.slf4j</groupId>
		    <artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		</dependency>
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>jakarta.mail</artifactId>
        </dependency>
       <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>
		<dependency>
		   <groupId>com.zaxxer</groupId>
		   <artifactId>HikariCP</artifactId>
		</dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpg-jdk18on</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-grizzly2-http</artifactId>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <type>jar</type>
        </dependency>
	    <dependency>
	        <groupId>com.fasterxml.jackson.module</groupId>
	        <artifactId>jackson-module-jaxb-annotations</artifactId>
	    </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
            <type>jar</type>
        </dependency>
		<dependency>
		    <groupId>org.glassfish.jersey.inject</groupId>
		    <artifactId>jersey-hk2</artifactId>
        </dependency>
        <!-- Removed JavaEE APIs removed from Java 9+ -->
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
        </dependency>
		<dependency>
		    <groupId>jakarta.ws.rs</groupId>
		    <artifactId>jakarta.ws.rs-api</artifactId>
		</dependency>
		<dependency>
		    <groupId>jakarta.annotation</groupId>
		    <artifactId>jakarta.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <scope>test</scope>
        </dependency>
		<dependency>
		    <groupId>org.mockito</groupId>
		    <artifactId>mockito-junit-jupiter</artifactId>
		    <scope>test</scope>
		</dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
		</dependency>
    </dependencies>
</project>
